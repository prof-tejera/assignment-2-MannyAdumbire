{"version":3,"sources":["components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","WorkoutStyles.js","components/generic/Button.js","TimerQueueContext.js","utils/helpers.js","components/generic/TimerTotalDisplay.js","components/generic/TimersPanel.js","views/WorkoutView.js","components/generic/TimerInput.js","components/generic/TimerTypeSelect.js","components/timers/UseTimer.js","components/generic/TimerDisplay.js","components/timers/Stopwatch.js","components/timers/Countdown.js","components/timers/XY.js","components/timers/Tabata.js","views/WorkoutEdit.js","App.js","index.js"],"names":["Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","Container","_templateObject2","Title","_templateObject3","RenderComponent","_templateObject4","Documentation","table","_templateObject5","DocumentComponent","_ref","title","component","propDocs","react_default","a","createElement","DocumentComponent_Documentation","map","doc","index","key","prop","description","type","defaultValue","sizeMapping","small","medium","large","Loading_templateObject","Dot","span","Loading_templateObject2","props","size","color","DotGroup","Loading_templateObject3","Loading","_ref$size","_ref$color","Loading_Container","DocumentationView_templateObject","DocumentationView_templateObject2","DocumentationView_Container","DocumentationView_Title","documentation_DocumentComponent","generic_Loading","containerStyle","concat","TimerInputGroup","WorkoutStyles_templateObject","Button","WorkoutStyles_templateObject2","status","css","WorkoutStyles_templateObject3","WorkoutStyles_templateObject4","WorkoutStyles_templateObject5","_templateObject6","_templateObject7","_templateObject8","hover","_templateObject9","img","_templateObject10","TimerInputBox","_templateObject11","_templateObject12","input","_templateObject13","TimerLabel","label","_templateObject14","_templateObject15","_templateObject16","onClick","objectWithoutProperties","_excluded","WorkoutStyles_Button","assign","TimerQueueContext","React","createContext","TimerQueueContextWrap","children","_useState","useState","_useState2","slicedToArray","timers","setTimers","_useState3","_useState4","isRunning","setIsRunning","_useState5","_useState6","setStatus","_useState7","_useState8","activeTimer","setActiveTimer","_useState9","_useState10","secondsTotal","setSecondsTotal","_useState11","_useState12","secondsLeft","setSecondsLeft","timerQ","getRemainingTime","nextTimer","updatedTimers","timer","idx","timerId","addTimer","tmrs","toConsumableArray","getTotalTimerTime","removeTimer","filter","t","total","forEach","minutesPerRound","secondsPerRound","roundsTotal","minutesRest","secondsRest","useEffect","_timers$","Provider","value","secsPartFromSecs","seconds","formatSeconds","time","secsFromMinsSecs","minutes","minsPartFromMs","ms","Math","trunc","secsPartFromMs","minsPartFromSecs","secs","msFromMinsSecs","TimerTotal","TimerTotalDisplay_templateObject","Text","p","TimerTotalDisplay_templateObject2","TimerTotalDisplay","_h$minsSecsFromSecs","h","_h$minsSecsFromSecs2","mins","StyledTimers","ws","TimersPanel_templateObject","TimersPanel_templateObject2","TimersPanel","TimersPanel_excluded","useContext","WorkoutStyles_Container","generic_Button","C","Timers","WorkoutView_templateObject","WorkoutView","_useContext","buttonTypes","className","btn","generic_TimerTotalDisplay","generic_TimersPanel","TimerInputs","TimerInput_templateObject","TimerInput","propSetter","disabled","TimerInput_excluded","id","replace","toLowerCase","name","onChange","e","parseInt","target","htmlFor","TimerType","TimerTypeSelect_templateObject","selected","TimerTypeSelect_templateObject2","TimerOptionsSelect","options","TimerTypeSelect_excluded","handleChange","textContent","safeLabel","optionValue","useTimer","roundNumber","setRoundNumber","_useState13","_useState14","secsLeft","setSecsLeft","msLeft","useRef","roundIntervalRef","resetTimer","current","setInterval","console","info","timerFrequency","prev","clearInterval","isrunning","TimerDisplayWrap","TimerDisplay_templateObject","TimerDisplay_templateObject2","TimerDisplayTime","TimerDisplay_templateObject3","TimerDisplay_templateObject4","TimerDisplay_templateObject5","TimerDisplay_templateObject6","TimerDisplay","isRoundTimer","includes","TimerDisplay_TimerDisplayTime","round","Stopwatch","minutesShown","setMinutesShown","secondsShown","setSecondsShown","_useTimer","getPassedSeconds","generic_TimerDisplay","CountDown","secsPart","minsPart","XY","Tabata","WorkoutEditWrap","WorkoutEdit_templateObject","timerComponents","Countdown","WorkoutEdit","timerType","setTimerType","setMinutesPerRound","setSecondsPerRound","setMinutesRest","setSecondsRest","setRoundsTotal","timeInputCheck","timerTypeOptions","timerInputs","min","max","rounds","style","flexDirection","option","generic_TimerTypeSelect","generic_TimerInput","restTimers","Date","now","error","fontSize","App_templateObject","Nav","dist","to","App","App_Container","App_Nav","src_TimerQueueContext","react_router_dist","path","element","DocumentationView","views_WorkoutView","views_WorkoutEdit","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"gTAGMA,EAAUC,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,6DAKPE,EAAYL,IAAOC,IAAVK,MAAAH,OAAAC,EAAA,EAAAD,CAAA,iFAMTI,EAAQP,IAAOC,IAAVO,MAAAL,OAAAC,EAAA,EAAAD,CAAA,oGAOLM,EAAkBT,IAAOC,IAAVS,MAAAP,OAAAC,EAAA,EAAAD,CAAA,sEAMfQ,EAAgBX,IAAOY,MAAVC,MAAAV,OAAAC,EAAA,EAAAD,CAAA,QAqCJW,EAnCW,SAAAC,GAAoC,IAAjCC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,UAAWC,EAAeH,EAAfG,SAC7C,OACEC,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAACd,EAAD,KAAQS,GACRG,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAACZ,EAAD,KAAkBQ,GAClBE,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAI,QACJF,EAAAC,EAAAC,cAAA,UAAI,eACJF,EAAAC,EAAAC,cAAA,UAAI,QACJF,EAAAC,EAAAC,cAAA,UAAI,mBAGRF,EAAAC,EAAAC,cAAA,aACGH,EAASK,IAAI,SAACC,EAAKC,GAClB,OACEN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,GACPN,EAAAC,EAAAC,cAAA,UAAKG,EAAIG,MACTR,EAAAC,EAAAC,cAAA,UAAKG,EAAII,aACTT,EAAAC,EAAAC,cAAA,UAAKG,EAAIK,MACTV,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,YAAOG,EAAIM,uBC9CzBC,EAAc,CAClBC,MAAO,GACPC,OAAQ,GACRC,MAAO,IAGH7B,EAAYL,IAAOC,IAAVkC,MAAAhC,OAAAC,EAAA,EAAAD,CAAA,sWAqBTiC,EAAMpC,IAAOqC,KAAVC,MAAAnC,OAAAC,EAAA,EAAAD,CAAA,kWAEE,SAACoC,GAAD,OAAWA,EAAMC,MAChB,SAACD,GAAD,OAAWA,EAAMC,MACP,SAACD,GAAD,OAAWA,EAAME,QAiBjCC,EAAW1C,IAAOC,IAAV0C,MAAAxC,OAAAC,EAAA,EAAAD,CAAA,4BAwBCyC,EApBC,SAAA7B,GAA+C,IAAA8B,EAAA9B,EAA5CyB,YAA4C,IAAAK,EAArC,SAAqCA,EAAAC,EAAA/B,EAA3B0B,aAA2B,IAAAK,EAtD1C,UAsD0CA,EAC7D,OACE3B,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAACe,EAAD,CAAKI,KAAMT,EAAYS,GAAOC,MAAOA,IACrCtB,EAAAC,EAAAC,cAACe,EAAD,CAAKI,KAAMT,EAAYS,GAAOC,MAAOA,KAEvCtB,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAACe,EAAD,CAAKI,KAAMT,EAAYS,GAAOC,MAAOA,IACrCtB,EAAAC,EAAAC,cAACe,EAAD,CAAKI,KAAMT,EAAYS,GAAOC,MAAOA,OC5DvCpC,EAAYL,IAAOC,IAAV+C,MAAA7C,OAAAC,EAAA,EAAAD,CAAA,wEAMTI,EAAQP,IAAOC,IAAVgD,MAAA9C,OAAAC,EAAA,EAAAD,CAAA,8BA8BIQ,EAvBO,WACpB,OACEQ,EAAAC,EAAAC,cAAC6B,EAAD,KACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAD,KAAO,iBACPhC,EAAAC,EAAAC,cAAC+B,EAAD,CACEpC,MAAM,mBACNC,UAAWE,EAAAC,EAAAC,cAACgC,EAAD,MACXnC,SAAU,CACR,CACES,KAAM,OACNC,YAAa,0CACbC,KAAM,SACNC,aAAc,gBC3BtBwB,EAAc,gBAAAC,OADF,QACE,6HASPC,GAAkBxD,IAAOqC,KAAVoB,MAAAtD,OAAAC,EAAA,EAAAD,CAAA,0HACxBmD,GAyBSI,IAnBe1D,IAAOC,IAAV0D,MAAAxD,OAAAC,EAAA,EAAAD,CAAA,gDAGrB,SAACoC,GAAD,MACiB,YAAjBA,EAAMqB,QACNC,YADAC,MAAA3D,OAAAC,EAAA,EAAAD,CAAA,mCAIA,SAACoC,GAAD,MACiB,YAAjBA,EAAMqB,QACNC,YADAE,MAAA5D,OAAAC,EAAA,EAAAD,CAAA,qCAKsBH,IAAOqC,KAAV2B,MAAA7D,OAAAC,EAAA,EAAAD,CAAA,QACSH,IAAOC,IAAVgE,MAAA9D,OAAAC,EAAA,EAAAD,CAAA,iDAIPH,IAAOC,IAAViE,MAAA/D,OAAAC,EAAA,EAAAD,CAAA,+eApCD,QA4Dd,SAACoC,GAAD,OACAA,EAAME,OACNoB,YADAM,MAAAhE,OAAAC,EAAA,EAAAD,CAAA,2CAEsBoC,EAAME,QAE5B,SAACF,GAAD,OACAA,EAAM6B,OACNP,YADAQ,MAAAlE,OAAAC,EAAA,EAAAD,CAAA,4HAIwBoC,EAAM6B,QAI9B,SAAC7B,GAAD,OACAA,EAAM+B,KACNT,YADAU,MAAApE,OAAAC,EAAA,EAAAD,CAAA,iEAGgBoC,EAAM+B,QAabE,IATgBxE,IAAOC,IAAVwE,MAAAtE,OAAAC,EAAA,EAAAD,CAAA,QAEKH,IAAOqC,KAAVqC,MAAAvE,OAAAC,EAAA,EAAAD,CAAA,uDApFV,iBA2FWH,IAAO2E,MAAVC,MAAAzE,OAAAC,EAAA,EAAAD,CAAA,qqBACtBmD,EA5Fc,UAgILuB,GAAa7E,IAAO8E,MAAVC,MAAA5E,OAAAC,EAAA,EAAAD,CAAA,6HAYVE,IAJOL,IAAO8E,MAAVE,MAAA7E,OAAAC,EAAA,EAAAD,CAAA,wBAxIC,SA4IOH,IAAOC,IAAVgF,MAAA9E,OAAAC,EAAA,EAAAD,CAAA,sKCtIPuD,GARA,SAAA3C,GAAwCA,EAArCc,KAAqC,IAA/BiD,EAA+B/D,EAA/B+D,MAAOI,EAAwBnE,EAAxBmE,QAAa3C,EAAWpC,OAAAgF,GAAA,EAAAhF,CAAAY,EAAAqE,IAErD,OACEjE,EAAAC,EAAAC,cAACgE,GAADlF,OAAAmF,OAAA,CAAWJ,QAASA,GAAa3C,GAC5BuC,oBCJIS,GAAoBC,IAAMC,gBA8HxBC,GA5He,SAAA3E,GAAkB,IAAf4E,EAAe5E,EAAf4E,SAC/BC,EAA4BC,mBAAS,IAArCC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOI,EAAPF,EAAA,GAAeG,EAAfH,EAAA,GACAI,EAAkCL,oBAAS,GAA3CM,EAAAhG,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,GAAOE,EAAPD,EAAA,GAAkBE,EAAlBF,EAAA,GAEAG,EAA4BT,mBAAS,SAArCU,EAAApG,OAAA4F,GAAA,EAAA5F,CAAAmG,EAAA,GAAO1C,EAAP2C,EAAA,GAAeC,EAAfD,EAAA,GAEAE,EAAsCZ,mBAAS,MAA/Ca,EAAAvG,OAAA4F,GAAA,EAAA5F,CAAAsG,EAAA,GAAOE,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GACAG,EAAwChB,mBAAS,GAAjDiB,EAAA3G,OAAA4F,GAAA,EAAA5F,CAAA0G,EAAA,GAAOE,EAAPD,EAAA,GAAqBE,EAArBF,EAAA,GACAG,EAAsCpB,mBAAS,GAA/CqB,EAAA/G,OAAA4F,GAAA,EAAA5F,CAAA8G,EAAA,GAAOE,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GAEMG,EAAS,CACbjB,YACAkB,mBACAjB,eACAM,cACAI,eACAI,cACAC,iBACApB,SACApC,SACA4C,YACAe,UAuEF,WACE,GAAoB,OAAhBZ,EACFH,EAAU,aACL,CACL,IAAIgB,EAAgBxB,EAAOzE,IAAI,SAACkG,EAAOC,GASrC,OARID,EAAME,UAAYhB,IACpBc,EAAM7D,OAAS,YACXoC,EAAO0B,EAAM,GACfd,EAAeZ,EAAO0B,EAAM,GAAGC,SAE/BnB,EAAU,UAGPiB,IAETxB,EAAUuB,KArFZI,SA8BF,SAAkBH,GAChBxB,EAAU,SAAC4B,GACT,IAAML,EAAa,GAAAjE,OAAApD,OAAA2H,GAAA,EAAA3H,CAAO0H,GAAP,CAAaJ,IAGhC,OAFAL,EAAeE,EAAiBE,IAChCR,EAAgBe,EAAkBP,IAC3BA,IAGTZ,EAAeD,GAAec,EAAME,UArCpCK,YAyFF,SAAqBL,GACnB1B,EAAUD,EAAOiC,OAAO,SAACC,GAAD,OAAOA,EAAEP,UAAYA,KAE7CX,EAAgBe,EAAkB/B,MAnDpC,SAAS+B,EAAkBF,GAEzB,IAAIM,EAAQ,EAOZ,OANAN,EAAKO,QAAQ,SAACX,GACZU,IAC2B,GAAxBV,EAAMY,gBAAuBZ,EAAMa,iBAClCb,EAAMc,aACa,GAApBd,EAAMe,YAAmBf,EAAMgB,aAAehB,EAAMc,cAElDJ,EAIT,SAASb,EAAiBO,GAExB,IAAIM,EAAQ,EASZ,OARAN,EAAKO,QAAQ,SAACX,GACS,cAAjBA,EAAM7D,SACRuE,IAC2B,GAAxBV,EAAMY,gBAAuBZ,EAAMa,iBAClCb,EAAMc,aACa,GAApBd,EAAMe,YAAmBf,EAAMgB,aAAehB,EAAMc,eAGpDJ,EA8BT,OA5FAO,oBAAU,WAGN,IAEYC,EAJC,YAAX/E,GACFyC,GAAa,GACCL,EAAOiC,OAAO,SAACC,GAAD,OAAOA,EAAEP,UAAYhB,IAAa,IAG5DC,EAAc,QAAA+B,EAAC3C,EAAO,UAAR,IAAA2C,OAAA,EAACA,EAAWhB,UAER,YAAX/D,EACTyC,GAAa,GACO,UAAXzC,IACTyC,GAAa,GAIbG,EAAU,WACVR,EAAOoC,QAAQ,SAACX,GACdA,EAAM7D,OAAS,UAEjBwD,EAAeE,EAAiBtB,IAChCgB,EAAgBe,EAAkB/B,IAClCY,EAAeZ,EAAO,GAAKA,EAAO,GAAG2B,QAAU,QAEhD,CAAC/D,EAAQoC,EAAQW,EAAaN,IAsE/BlF,EAAAC,EAAAC,cAACkE,GAAkBqD,SAAnB,CAA4BC,MAAOxB,GAChC1B,ICxHA,SAASmD,GAAiBC,GAC/B,OAAOA,EAAU,GAIZ,SAASC,GAAcC,GAE5B,OADAA,EAAOA,EAAO,GAAP,IAAA1F,OAAgB0F,GAASA,EAU3B,SAASC,GAAiBC,EAASJ,GACxC,OAAiB,GAAVI,EAAeJ,EAQjB,SAASK,GAAeC,GAC7B,OAAOC,KAAKC,MAAMF,EAAK,IAAO,IAIzB,SAASG,GAAeH,GAC7B,OAAOC,KAAKC,MAAMF,EAAK,IAAO,IAIzB,SAASI,GAAiBC,GAC/B,OAAOJ,KAAKC,MAAMG,EAAO,IAIpB,SAASC,GAAeR,EAASJ,GACtC,OAAkC,KAAhB,GAAVI,EAAeJ,GCrCzB,8CAAMa,GAAa5J,IAAOC,IAAV4J,MAAA1J,OAAAC,EAAA,EAAAD,CAAA,+NAYV2J,GAAO9J,IAAO+J,EAAVC,MAAA7J,OAAAC,EAAA,EAAAD,CAAA,oFAqBK8J,GAbW,SAAC1H,GACvB,IAAA2H,EDwBG,SAA0BR,GAE/B,MAAO,CAAEN,GADTM,GAAc,KACiBF,GAAeE,IC1BrBS,CAAmB5H,EAAMwG,SAAhDqB,EAAAjK,OAAA4F,GAAA,EAAA5F,CAAA+J,EAAA,GAAQG,EAARD,EAAA,GAAcV,EAAdU,EAAA,GACA,OACEjJ,EAAAC,EAAAC,cAACuI,GAAD,KACIzI,EAAAC,EAAAC,cAACyI,GAAD,KAAOvH,EAAMvB,OACbG,EAAAC,EAAAC,cAACyI,GAAD,KACGO,EAAK,QAAM,IACXX,EAAK,yBC1BZY,GAAetK,YAAOuK,GAAPvK,CAAHwK,QAAArK,OAAAC,EAAA,EAAAD,CAAA,2CAEd,SAACoC,GAAD,MACiB,cAAjBA,EAAMqB,QACNC,YADA4G,QAAAtK,OAAAC,EAAA,EAAAD,CAAA,0EAmCWuK,GA5BK,SAAA3J,GAA0B,IAAvBiF,EAAuBjF,EAAvBiF,OAAWzD,EAAYpC,OAAAgF,GAAA,EAAAhF,CAAAY,EAAA4J,IACpC3C,EAAgB4C,qBAAWrF,IAA3ByC,YAQR,OAEE7G,EAAAC,EAAAC,cAACiJ,GAAiB/H,EACfyD,EAAOzE,IAAI,SAACkG,EAAOC,GAAR,OACVvG,EAAAC,EAAAC,cAACwJ,GAAD1K,OAAAmF,OAAA,CAAc1B,OAAQ6D,EAAM7D,OAAQlC,IAAG,UAAA6B,OAAYmE,IAAWnF,GAC5DpB,EAAAC,EAAAC,cAACyJ,GAAD,CACEjJ,KAAK,SACLiD,MAAM,GACN9D,MAAM,eACNsD,IAAI,SACJF,MAAM,aACNc,QAAS,kBAAM8C,EAAYP,EAAME,YAEnCxG,EAAAC,EAAAC,cAACoG,EAAMsD,EAAP5K,OAAAmF,OAAA,CAAS5D,IAAG,SAAA6B,OAAWmE,IAAWD,SCjCtCuD,GAAShL,IAAOC,IAAVgL,QAAA9K,OAAAC,EAAA,EAAAD,CAAA,oGAuDG+K,GA/CK,SAACvF,GACnB,IAAAwF,EACEP,qBAAWrF,IADLS,EAARmF,EAAQnF,OAAQmB,EAAhBgE,EAAgBhE,YAAaX,EAA7B2E,EAA6B3E,UAAWe,EAAxC4D,EAAwC5D,UAAWnB,EAAnD+E,EAAmD/E,UAgBnD,IAAMgF,EAAc,CAClB,CACEvJ,KAAMuE,EAAY,OAAS,QAC3BtB,MAAOsB,EAAY,cAAW,eAC9B3D,MAAO2D,EAAY,UAAY,YAC/BhC,MAAOgC,EAAY,MAAQ,QAC3BlB,QAVJ,WACEsB,EAAUJ,EAAY,UAAY,aAWlC,CACEvE,KAAM,eACNqD,QAnBsB,WACxBqC,KAmBEzC,MAAO,cACPrC,MAAO,gBACP2B,MAAO,QAET,CAAEvC,KAAM,QAASqD,QA5BC,WAClBsB,EAAU,UA2B6B1B,MAAO,eAAWV,MAAO,SAElE,OACEjD,EAAAC,EAAAC,cAAC2J,GAAD,KACE7J,EAAAC,EAAAC,cAACwJ,GAAD,CAAcQ,UAAU,gBACrBD,EAAY7J,IAAI,SAAC+J,EAAK5D,GAAN,OACfvG,EAAAC,EAAAC,cAACyJ,GAAD3K,OAAAmF,OAAA,CAAQ5D,IAAG,OAAA6B,OAASmE,IAAW4D,OAGnCnK,EAAAC,EAAAC,cAACkK,GAAD,CAAmBvK,MAAM,cAAc+H,QAAS5B,IAChDhG,EAAAC,EAAAC,cAACmK,GAAD,CAAaxF,OAAQA,mDCvDrByF,GAAczL,YAAOuK,GAAPvK,CAAH0L,QAAAvL,OAAAC,EAAA,EAAAD,CAAA,kFAgCFwL,GA3BI,SAAA5K,GAAsD,IAAnD+D,EAAmD/D,EAAnD+D,MAAO+D,EAA4C9H,EAA5C8H,MAAO+C,EAAqC7K,EAArC6K,WAAYC,EAAyB9K,EAAzB8K,SAAatJ,EAAYpC,OAAAgF,GAAA,EAAAhF,CAAAY,EAAA+K,IACjEjK,EAAOU,EAAMV,MAAQ,SAErBkK,EAAK,eADOjH,EAAMkH,QAAQ,cAAe,IAAIC,cAMnD,OACE9K,EAAAC,EAAAC,cAACoK,GAAD,CAAaI,SAAUA,GACrB1K,EAAAC,EAAAC,cAACmD,GAADrE,OAAAmF,OAAA,GACM/C,EADN,CAEEsJ,SAAUA,EACVhK,KAAMA,EACNwJ,UAAU,cACVa,KAAMH,EACNA,GAAIA,EACJlD,MAAOA,GAAS,GAChBsD,SAbN,SAAsBC,GACpBR,EAAWS,SAASD,EAAEE,OAAOzD,YAc3B1H,EAAAC,EAAAC,cAACwD,GAAD,CAAegH,SAAUA,EAAUU,QAASR,GACzCjH,+DC1BH0H,GAAYxM,YAAOuK,GAAPvK,CAAHyM,QAAAtM,OAAAC,EAAA,EAAAD,CAAA,sLAOX,SAACoC,GAAD,OACAA,EAAMmK,UACN7I,YADA8I,QAAAxM,OAAAC,EAAA,EAAAD,CAAA,qEA0CWyM,GAhCY,SAAA7L,GAOrB,IANJ+D,EAMI/D,EANJ+D,MACA+H,EAKI9L,EALJ8L,QACAH,EAII3L,EAJJ2L,SACAd,EAGI7K,EAHJ6K,WAGI7K,EAFJ8K,SAEI1L,OAAAgF,GAAA,EAAAhF,CAAAY,EAAA+L,IACJ,SAASC,EAAaX,GACpBR,EAAWQ,EAAEE,OAAOU,aAGtB,IAAMC,EAAYnI,EAAMkH,QAAQ,cAAe,IAAIC,cAGnD,OACE9K,EAAAC,EAAAC,cAACmC,GAAD,KACGqJ,EAAQtL,IAAI,SAAC2L,EAAaxF,GAAd,OACXvG,EAAAC,EAAAC,cAACmL,GAADrM,OAAAmF,OAAA,CACE5D,IAAG,UAAA6B,OAAYmE,GACftD,MAAM,QACNc,QAAS6H,EACThB,GAAE,GAAAxI,OAAK0J,EAAL,KAAA1J,OAAkB2J,IACfA,IAAgBR,GAAY,CAAEA,SAAU,KAE5CQ,OC1CEC,GAAW,SAACxF,GACvB,IAAAwD,EACEP,qBAAWrF,IADLS,EAARmF,EAAQnF,OAAQoB,EAAhB+D,EAAgB/D,eAAexD,EAA/BuH,EAA+BvH,OAAQ0D,EAAvC6D,EAAuC7D,iBAAiBX,EAAxDwE,EAAwDxE,YAAaP,EAArE+E,EAAqE/E,UAAWmB,EAAhF4D,EAAgF5D,UAI1EE,EAAQzB,EAAOiC,OAAO,SAACC,GAAD,OAAOA,EAAEP,UAAYA,IAAS,GAG1D/B,EAAsCC,mBAAS,GAA/CC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOwH,EAAPtH,EAAA,GAAoBuH,EAApBvH,EAAA,GACAI,EAAsBL,oBAAc,OAAL4B,QAAK,IAALA,OAAA,EAAAA,EAAOc,cAAe,GAA9CA,EAAPpI,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,MACAI,EAA0BT,oBAAc,OAAL4B,QAAK,IAALA,OAAA,EAAAA,EAAOY,kBAAmB,GAAtDA,EAAPlI,OAAA4F,GAAA,EAAA5F,CAAAmG,EAAA,MACAG,EAA0BZ,oBAAc,OAAL4B,QAAK,IAALA,OAAA,EAAAA,EAAOa,kBAAmB,GAAtDA,EAAPnI,OAAA4F,GAAA,EAAA5F,CAAAsG,EAAA,MACAI,EAAsBhB,oBAAc,OAAL4B,QAAK,IAALA,OAAA,EAAAA,EAAOe,cAAe,GAA9CA,EAAPrI,OAAA4F,GAAA,EAAA5F,CAAA0G,EAAA,MACAI,EAAsBpB,oBAAc,OAAL4B,QAAK,IAALA,OAAA,EAAAA,EAAOgB,cAAe,GAA9CA,EAAPtI,OAAA4F,GAAA,EAAA5F,CAAA8G,EAAA,MACAqG,EAAgCzH,mBAC9BsE,GAAmB9B,EAAiBC,IAAoB,GAD1DiF,EAAApN,OAAA4F,GAAA,EAAA5F,CAAAmN,EAAA,GAAOE,EAAPD,EAAA,GAAiBE,EAAjBF,EAAA,GAQMG,EAASC,iBAAkB,IAAXH,GAAmB,GAGnCI,EAAmBD,iBAAO,MAkGhC,OA/FAjF,oBAAU,WACR,SAASmF,IACPJ,EACEtD,GAAmB9B,EAAiBC,IAAoB,GAE1D+E,EAAe,GAEH,UAAXzJ,GACDiK,IASF,GAAKzH,GAAaO,IAAgBgB,EAsDlC,MAjDuB,UAAjBF,EAAM7D,SACR6D,EAAM7D,OAAS,WAGjBgK,EAAiBE,QAAUC,YAAY,WAChCX,GACHC,EAAe,GAEZK,EAAOI,UAEVJ,EAAOI,QAAU3D,GAAiB9B,EAAiBC,IAErDoF,EAAOI,SAvBY,IAyBnBE,QAAQC,KAAKP,EAAOI,SAChBJ,EAAOI,SA1BQ,IA4BbJ,EAAOI,QAzBSI,MAyBuB,GACzCT,EAAYC,EAAOI,QAAU,KAI3BV,EAAc7E,GAEXC,GAAeC,IAAgB,YAAchB,EAAM7D,QAEtD6J,EAAYtD,GAAmB3B,EAAaC,IAC5CiF,EAAOI,QAAU3D,GAAiB3B,EAAaC,GAC/ChB,EAAM7D,OAAS,YAGfyJ,EAAe,SAACc,GAAD,OAAUA,EAAO,IAChCT,EAAOI,QAAU3D,GACf9B,EACAC,GAEFb,EAAM7D,OAAS,UACf6D,EAAM7D,OAAS,YAIjB6D,EAAM7D,OAAS,WACf2D,IACAH,EAAeE,EAAiBtB,IAChC6H,MAvDe,KA4DhB,WAEDD,EAAiBE,SACnBM,cAAcR,EAAiBE,UAvDjCF,EAAiBE,SAAWM,cAAcR,EAAiBE,UA0D5D,CACD1G,EACAK,EACAzB,EACAI,EACAgH,EACA/E,EACAC,EACAE,EACAC,EACAF,EACAZ,EACAJ,EACA3D,EACA+C,EACAW,IAGK,CACL1D,OAAQ6D,EAAM7D,OACd4J,SAAUA,EACVa,UAAWjI,EACXgH,YAAaA,IC/HXkB,GAAmBtO,IAAOC,IAAVsO,QAAApO,OAAAC,EAAA,EAAAD,CAAA,qPAYhB,SAACoC,GAAD,MAA4B,cAAjBA,EAAMqB,QACnBC,YADa2K,QAAArO,OAAAC,EAAA,EAAAD,CAAA,6FAQXsO,GAAmBzO,YAAOuK,GAAPvK,CAAH0O,QAAAvO,OAAAC,EAAA,EAAAD,CAAA,8EAGhB,SAACoC,GAAD,MAA4B,YAAjBA,EAAMqB,QACnBC,YADa8K,QAAAxO,OAAAC,EAAA,EAAAD,CAAA,4DAKX,SAACoC,GAAD,MAA4B,cAAjBA,EAAMqB,QACnBC,YADa+K,QAAAzO,OAAAC,EAAA,EAAAD,CAAA,wEAKX,SAACoC,GAAD,MAA4B,YAAjBA,EAAMqB,QACnBC,YADagL,QAAA1O,OAAAC,EAAA,EAAAD,CAAA,+DA2BF2O,GApBM,SAACvM,GACpB,IACMwM,EADc,CAAC,KAAM,UACMC,SAASzM,EAAMV,MAChD,OACIV,EAAAC,EAAAC,cAACiN,GAAD,KACAnN,EAAAC,EAAAC,cAAC4N,GAAD,CAAkBrL,OAAQrB,EAAMqB,QAC7BrB,EAAM8H,KAAK,IAAE9H,EAAMmH,MAEtBvI,EAAAC,EAAAC,cAAA,SAAIkB,EAAMV,MACP,IACDV,EAAAC,EAAAC,cAAA,YACG0N,IACmB,YAAjBxM,EAAMqB,OACH,OADH,UAAAL,OAEahB,EAAM2M,MAFnB,QAAA3L,OAE+BhB,EAAMgG,iBCjBnC4G,GAnCG,SAAC5M,GAEjB,IAAAqD,EAAwCC,mBAAS,MAAjDC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOwJ,EAAPtJ,EAAA,GAAqBuJ,EAArBvJ,EAAA,GACAI,EAAwCL,mBAAS,MAAjDM,EAAAhG,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,GAAOoJ,EAAPnJ,EAAA,GAAqBoJ,EAArBpJ,EAAA,GAEAqJ,EAA6BrC,GAAS5K,EAAMoF,SAApC6F,EAARgC,EAAQhC,SAAU5J,EAAlB4L,EAAkB5L,OAmBlB,OAjBA8E,oBAAU,WACR,IAAM2B,EAAOF,GAAmBsF,KAC1B/F,EAAOS,GAAmBsF,KAKhC,SAASA,IAKP,OAJ0BtF,GACxB5H,EAAM8F,gBACN9F,EAAM+F,iBAEmBkF,EAT7B+B,EAAgBpF,GAAgBT,IAChC2F,EAAgBlF,GAAgBE,KAU/B,CAAC9H,EAAOiL,IAITrM,EAAAC,EAAAC,cAACqO,GAAD,CACE9L,OAAQA,EACRmI,GAAIxJ,EAAMoF,QACV9F,KA9BY,YA+BZwI,KAAM+E,EACN1F,KAAM4F,KCFGK,GA7BG,SAACpN,GAKjB,IAAAqD,EAAwCC,mBAAS,MAAjDC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOwJ,EAAPtJ,EAAA,GAAqBuJ,EAArBvJ,EAAA,GACAI,EAAwCL,mBAAS,MAAjDM,EAAAhG,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,GAAOoJ,EAAPnJ,EAAA,GAAqBoJ,EAArBpJ,EAAA,GAEAqJ,EAA6BrC,GAAS5K,EAAMoF,SAApC6F,EAARgC,EAAQhC,SAAU5J,EAAlB4L,EAAkB5L,OAUlB,OARA8E,oBAAU,WACR,IAAIkH,EAAWzF,GAAmBqD,GAC9BqC,EAAW1F,GAAmBqD,GAElC+B,EAAgBpF,GAAgByF,IAChCP,EAAgBlF,GAAgB0F,KAC/B,CAACrC,IAGFrM,EAAAC,EAAAC,cAACqO,GAAD,CACE9L,OAAQA,EACRmI,GAAIxJ,EAAMoF,QACV9F,KAAMU,EAAMV,KACZwI,KAAM+E,EACN1F,KAAM4F,KCWGQ,GAjCJ,SAACvN,GAEV,IAAAqD,EAAwCC,mBAAS,MAAjDC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOwJ,EAAPtJ,EAAA,GAAqBuJ,EAArBvJ,EAAA,GACAI,EAAwCL,mBAAS,MAAjDM,EAAAhG,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,GAAOoJ,EAAPnJ,EAAA,GAAqBoJ,EAArBpJ,EAAA,GAEAqJ,EAIIrC,GAAS5K,EAAMoF,SAHjB/D,EADF4L,EACE5L,OACA4J,EAFFgC,EAEEhC,SACAJ,EAHFoC,EAGEpC,YAYF,OATA1E,oBAAU,WACR,IAAIkH,EAAWzF,GAAmBqD,GAC9BqC,EAAW1F,GAAmBqD,GAElC+B,EAAgBpF,GAAgByF,IAChCP,EAAgBlF,GAAgB0F,KAC/B,CAACrC,IAIArM,EAAAC,EAAAC,cAACqO,GAAD,CACE3D,GAAIxJ,EAAMoF,QACV9F,KAzBU,KA0BV+B,OAAQA,EACRyG,KAAM+E,EACN1F,KAAM4F,EACNJ,MAAO9B,EACP7E,YAAahG,EAAMgG,eCKZwH,UAjCA,SAACxN,GAEd,IAAAqD,EAAwCC,mBAAS,MAAjDC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOwJ,EAAPtJ,EAAA,GAAqBuJ,EAArBvJ,EAAA,GACAI,EAAwCL,mBAAS,MAAjDM,EAAAhG,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,GAAOoJ,EAAPnJ,EAAA,GAAqBoJ,EAArBpJ,EAAA,GAEAqJ,EAIIrC,GAAS5K,EAAMoF,SAHjB/D,EADF4L,EACE5L,OACA4J,EAFFgC,EAEEhC,SACAJ,EAHFoC,EAGEpC,YAYF,OATA1E,oBAAU,WACR,IAAIkH,EAAWzF,GAAmBqD,GAC9BqC,EAAW1F,GAAmBqD,GAElC+B,EAAgBpF,GAAgByF,IAChCP,EAAgBlF,GAAgB0F,KAC/B,CAACrC,IAIArM,EAAAC,EAAAC,cAACqO,GAAD,CACE3D,GAAIxJ,EAAMoF,QACV9F,KAzBU,SA0BV+B,OAAQA,EACRyG,KAAM+E,EACN1F,KAAM4F,EACNJ,MAAO9B,EACP7E,YAAahG,EAAMgG,gBChBrByH,GAAkBhQ,IAAOC,IAAVgQ,QAAA9P,OAAAC,EAAA,EAAAD,CAAA,uDAKf+P,GAAkB,CACtBf,UAAWA,GACXgB,UAAWA,GACXL,GAAIA,GACJC,OAAQA,IAkLKK,GA/KK,WAClB,IAAAjF,EACEP,qBAAWrF,IADLS,EAARmF,EAAQnF,OAAQe,EAAhBoE,EAAgBpE,aAAca,EAA9BuD,EAA8BvD,SAG9BhC,EAAkCC,mBAAS,IAA3CC,EAAA3F,OAAA4F,GAAA,EAAA5F,CAAAyF,EAAA,GAAOyK,EAAPvK,EAAA,GAAkBwK,EAAlBxK,EAAA,GAGAI,EAA8CL,mBAAS,GAAvDM,EAAAhG,OAAA4F,GAAA,EAAA5F,CAAA+F,EAAA,GAAOmC,EAAPlC,EAAA,GAAwBoK,EAAxBpK,EAAA,GACAG,EAA8CT,mBAAS,GAAvDU,EAAApG,OAAA4F,GAAA,EAAA5F,CAAAmG,EAAA,GAAOgC,EAAP/B,EAAA,GAAwBiK,EAAxBjK,EAAA,GACAE,EAAsCZ,mBAAS,GAA/Ca,EAAAvG,OAAA4F,GAAA,EAAA5F,CAAAsG,EAAA,GAAO+B,EAAP9B,EAAA,GAAoB+J,EAApB/J,EAAA,GACAG,EAAsChB,mBAAS,GAA/CiB,EAAA3G,OAAA4F,GAAA,EAAA5F,CAAA0G,EAAA,GAAO4B,EAAP3B,EAAA,GAAoB4J,EAApB5J,EAAA,GACAG,EAAsCpB,mBAAS,GAA/CqB,EAAA/G,OAAA4F,GAAA,EAAA5F,CAAA8G,EAAA,GAAOsB,EAAPrB,EAAA,GAAoByJ,EAApBzJ,EAAA,GAGM0J,EACJtI,EAAkBD,EAAkBI,EAAcD,EAwBpD,IAAMqI,EAAmB,CACvB,CACE/L,MAAO,aACP+D,MAAOwH,EACPxD,QAAS,CAAC,YAAa,YAAa,KAAM,UAC1CjB,WAAY0E,EACZzO,KAAM,WAGJiP,EAAc,CAClB,CACEhM,MAAO,OACP+D,MAAOR,EAEPuD,WAAY2E,EACZrL,QAAS,WACPqL,EAAmB,SAAClG,GAClB,OAAQA,EAAQ,KAGpBxI,KAAM,SACNkP,IAAK,KAEP,CACEjM,MAAO,OACP+D,MAAOP,EAEPsD,WAAY4E,EACZO,IAAK,IACLC,IAAK,KACL9L,QAAS,WACPsL,EAAmB,SAAC9G,GAClB,OAAQA,EAAQ,KAGpB7H,KAAM,UAER,CACEiD,MAAO,aACP+D,MAAOL,EAEPoD,WAAY6E,EACZ5E,SAAwB,WAAdwE,EACVU,IAAK,IACLlP,KAAM,SACNqD,QAAS,WACPuL,EAAe,SAACpG,GACd,OAAQA,EAAQ,MAItB,CACEvF,MAAO,aACP+D,MAAOJ,EAEPmD,WAAY8E,EACZ7E,SAAwB,WAAdwE,EACVU,IAAK,IACLC,IAAK,KACLnP,KAAM,SACNqD,QAAS,WACPwL,EAAe,SAAChH,GACd,OAAQA,EAAQ,MAItB,CACE5E,MAAO,SACP+D,MAAON,EACPqD,WAAY+E,EACZ9E,SAAU,CAAC,YAAa,aAAamD,SAASqB,GAC9CxO,KAAM,SACNkP,IAAK,IACL7L,QAAS,WACPyL,EAAe,SAACM,GACd,OAAQA,EAAU,OAK1B,OACE9P,EAAAC,EAAAC,cAAC2O,GAAD,KACE7O,EAAAC,EAAAC,cAACwJ,GAAD,CAAcqG,MAAO,CAAEC,cAAe,WACrB,KAAdd,GAAoBlP,EAAAC,EAAAC,cAAA,cAAQ,kBAC5BwP,EAAiBtP,IAAI,SAAC6P,EAAQ1J,GAAT,OACpBvG,EAAAC,EAAAC,cAACgQ,GAADlR,OAAAmF,OAAA,CACE5D,IAAG,UAAA6B,OAAYmE,GACf5C,MAAOsM,EAAOtM,MACd+D,MAAOuI,EAAOvI,MACdzE,MAAM,SACNsI,SAAU2D,IAAce,EAAOvI,MAC/B+C,WAAYwF,EAAOxF,WACnBC,SAAUuF,EAAOvF,SACjBgB,QAASuE,EAAOvE,SACZuE,OAIVjQ,EAAAC,EAAAC,cAACwJ,GAAD,KACGwF,GACCS,EAAYvP,IAAI,SAACkG,EAAOC,GAAR,OACdvG,EAAAC,EAAAC,cAACiQ,GAADnR,OAAAmF,OAAA,CACE5D,IAAG,UAAA6B,OAAYmE,GACf5C,MAAO2C,EAAM3C,MACbV,MAAM,SACNyE,MAAOpB,EAAMoB,MACb+C,WAAYnE,EAAMmE,WAClBC,SAAUpE,EAAMoE,UACZpE,OAIX4I,GAAaO,EAAiB,GAC7BzP,EAAAC,EAAAC,cAACwJ,GAAD,KACE1J,EAAAC,EAAAC,cAACyJ,GAAD,CACEjJ,KAAK,MACLkK,GAAG,YACHjH,MAAM,GACN9D,MAAM,YACNoD,MAAM,aACN3B,MAAM,QACNoJ,SAAU+E,EAAiB,EAC3BtM,IAAK+L,EAAS,SAAS,GACvBnL,QAjJV,WAEE,IAAMqM,EAAa,CAAC,UACpB,GAAIlB,EAAW,CACb,IAAMxO,EAAOwO,EAAUpE,cACvBrE,EACE,CACAD,QAAS6J,KAAKC,MACd1G,EAAGmF,GAAgBG,GACnBxO,KAAMA,EACN+B,OAAQ,QACRyE,gBAAiBA,EACjBC,gBAAiBA,EACjBE,YAAa+I,EAAWvC,SAASnN,GAAQ2G,EAAc,EACvDC,YAAa8I,EAAWvC,SAASnN,GAAQ4G,EAAc,EACvDF,YAAaA,GAAe,SAI9ByF,QAAQ0D,MAAR,sBAAAnO,OAAoC8M,OAgIhClP,EAAAC,EAAAC,cAAA,QAAM6P,MAAO,CAAES,SAAU,SAAU,OAAKtB,GACxClP,EAAAC,EAAAC,cAACkK,GAAD,CACEvK,MAAM,uBACN+H,QAAShC,KAIf5F,EAAAC,EAAAC,cAACmK,GAAD,CAAaxF,OAAQA,MClMrB3F,GAAYL,IAAOC,IAAV2R,QAAAzR,OAAAC,EAAA,EAAAD,CAAA,wPAiBT0R,GAAM,WACV,OACE1Q,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyQ,EAAA,EAAD,CAAMC,GAAG,SAAQ,SAEnB5Q,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyQ,EAAA,EAAD,CAAMC,GAAG,KAAI,YAEf5Q,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyQ,EAAA,EAAD,CAAMC,GAAG,SAAQ,qBAwBZC,GAlBH,WACV,OACE7Q,EAAAC,EAAAC,cAAC4Q,GAAD,KACE9Q,EAAAC,EAAAC,cAACyQ,EAAA,EAAD,KACE3Q,EAAAC,EAAAC,cAAC6Q,GAAD,MACA/Q,EAAAC,EAAAC,cAAC8Q,GAAD,KACEhR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,KACEjR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,QAAQC,QAASnR,EAAAC,EAAAC,cAACkR,EAAD,QAC7BpR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASnR,EAAAC,EAAAC,cAACmR,GAAD,QACzBrR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,OAAOC,QAASnR,EAAAC,EAAAC,cAACoR,GAAD,QAC5BtR,EAAAC,EAAAC,cAAC+Q,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASnR,EAAAC,EAAAC,cAACoR,GAAD,aChDxBC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH3R,EAAAC,EAAAC,cAACF,EAAAC,EAAM2R,WAAP,KACE5R,EAAAC,EAAAC,cAAC2R,GAAD","file":"static/js/main.19e8c8ed.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nconst DocumentComponent = ({ title, component, propDocs }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Container>\n        <RenderComponent>{component}</RenderComponent>\n        <Documentation>\n          <thead>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {propDocs.map((doc, index) => {\n              return (\n                <tr key={index}>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Documentation>\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nconst Loading = ({ size = \"medium\", color = primaryColor }) => {\n  return (\n    <Container>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n      <DotGroup>\n        <Dot size={sizeMapping[size]} color={color} />\n        <Dot size={sizeMapping[size]} color={color} />\n      </DotGroup>\n    </Container>\n  );\n};\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\n\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\n/**\n * You can document your components by using the DocumentComponent component\n */\nconst Documentation = () => {\n  return (\n    <Container>\n      <div>\n        <Title>Documentation</Title>\n        <DocumentComponent\n          title=\"Loading spinner \"\n          component={<Loading />}\n          propDocs={[\n            {\n              prop: \"size\",\n              description: \"Changes the size of the loading spinner\",\n              type: \"string\",\n              defaultValue: \"medium\",\n            },\n          ]}\n        />\n        \n      </div>\n    </Container>\n  );\n};\n\nexport default Documentation;\n","/**\n * Common styles for the workout timer\n */\nimport styled, { css } from \"styled-components\";\n\nconst textColor = \"wheat\";\nconst containerStyle = `\n    color: ${textColor};\n    display: flex;\n    flex-direction: column;\n    flex-wrap:wrap;\n    background-color: black;\n    color:wheat;\n`;\n\nexport const TimerInputGroup = styled.span`\n  ${containerStyle}\n  flex-direction: row;\n  margin: 0 0.2rem;\n  align-items: flex-start;\n  justify-content: flext-start;\n`;\nexport const TimerDisplay = styled.div`\n  font-size: x-large;\n\n  ${(props) =>\n    props.status === \"stopped\" &&\n    css`\n      color: grey;\n    `}\n  ${(props) =>\n    props.status === \"running\" &&\n    css`\n      color: green;\n    `}\n`;\nexport const TimerPanel = styled.span``;\nexport const TimerDisplayTime = styled.div`\n  font-size: x-large;\n  color: grey;\n`;\nexport const Button = styled.div`\n  display: flex;\n  cursor: pointer;\n  font-size: medium;\n  color: ${textColor};\n  position: relative;\n  padding: 0.4rem 0.2rem;\n  min-height: 2rem;\n  min-width: 2rem;\n  margin: 0.2rem;\n  border: solid 1px white;\n  border-radius: 20%;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  &:disabled {\n    color: gray;\n    pointer-events: none;\n  }\n  &:active {\n    position: relative;\n    top: 0.2rem;\n    border-color: white;\n  }\n  ${(props) =>\n    props.color &&\n    css`\n      background-color: ${props.color};\n    `}\n  ${(props) =>\n    props.hover &&\n    css`\n      &:hover {\n        border-color: white;\n        background-color: ${props.hover};\n        color: black;\n      }\n    `}\n  ${(props) =>\n    props.img &&\n    css`\n      &:before {\n        content: \"${props.img}\";\n      }\n    `}\n`;\nexport const DisplayRounds = styled.div``;\n\nexport const TimerTypeSelect = styled.span`\n  color: ${textColor};\n  & p {\n    color: ${textColor};\n  }\n`;\n\nexport const TimerInputBox = styled.input`\n  ${containerStyle}\n  color: ${textColor};\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: end;\n  background-color: black;\n  cursor: pointer;\n  height: 100%;\n  font-family: ui-monospace;\n  font-size: x-large;\n  margin: 0rem 0.2rem 2rem 0rem;\n  background-color: black;\n  border: solid 1px white;\n  color: white;\n  font-size: x-large;\n  width: 3rem;\n\n  &:disabled {\n    background-color: black;\n    color: gray;\n    display: none;\n  }\n  &:disabled + label {\n    display: none;\n  }\n  &:before {\n  }\n  + label {\n    justify-content: center;\n    align-items: center;\n    font-size: small;\n    font-size: normal;\n    color: white;\n  }\n`;\nexport const TimerLabel = styled.label`\n  justify-content: center;\n  align-items: center;\n  font-size: medium;\n  &:disabled {\n    display: none;\n  }\n`;\nexport const Wrap = styled.label`\n  color: ${textColor};\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: baseline;\n  & p {\n    padding-left: 0.2rem;\n  }\n`;\n","import React from \"react\";\nimport * as ws from \"../../WorkoutStyles\";\n\nconst Button = ({ type, label, onClick , ...props}) => {\n  // Keep the current mode in sync with the parent component that passed it in.\n  return (\n    <ws.Button onClick={onClick} {...props}>\n        {label}\n    </ws.Button>\n  );\n};\nexport default Button;\n","// TimerQueueContext.js\nimport React, { useEffect, useState } from \"react\";\n\nexport const TimerQueueContext = React.createContext();\n\nconst TimerQueueContextWrap = ({ children }) => {\n  const [timers, setTimers] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  // States \"ready\", \"running\", \"stopped\", \"reset\n  const [status, setStatus] = useState(\"ready\");\n  // Id of the active timer.\n  const [activeTimer, setActiveTimer] = useState(null);\n  const [secondsTotal, setSecondsTotal] = useState(0);\n  const [secondsLeft, setSecondsLeft] = useState(0);\n\n  const timerQ = {\n    isRunning,\n    getRemainingTime,\n    setIsRunning,\n    activeTimer,\n    secondsTotal,\n    secondsLeft,\n    setSecondsLeft,\n    timers,\n    status,\n    setStatus,\n    nextTimer,\n    addTimer,\n    removeTimer,\n  };\n\n  useEffect(() => {\n    if (status === \"running\") {\n      setIsRunning(true);\n      const timer = timers.filter((t) => t.timerId === activeTimer)[0];\n      // If the timer is missing, replace it.\n      if (!timer) {\n        setActiveTimer(timers[0]?.timerId);\n      }\n    } else if (status === \"stopped\") {\n      setIsRunning(false);\n    } else if (status === \"reset\") {\n      setIsRunning(false);\n      resetWorkout();\n    }\n    function resetWorkout() {\n      setStatus(\"stopped\");\n      timers.forEach((timer) => {\n        timer.status = \"ready\";\n      });\n      setSecondsLeft(getRemainingTime(timers));\n      setSecondsTotal(getTotalTimerTime(timers));\n      setActiveTimer(timers[0] ? timers[0].timerId : null);\n    }\n  }, [status, timers, activeTimer, setIsRunning]);\n\n  // Logic to add a timer and update the total times.\n  function addTimer(timer) {\n    setTimers((tmrs) => {\n      const updatedTimers = [...tmrs, timer];\n      setSecondsLeft(getRemainingTime(updatedTimers));\n      setSecondsTotal(getTotalTimerTime(updatedTimers));\n      return updatedTimers;\n    });\n    // Set the active timer if there isn't one already & recalculate the total time.\n    setActiveTimer(activeTimer || timer.timerId);\n  }\n\n  // Get the total time for all timers.\n  function getTotalTimerTime(tmrs) {\n    // Loop through the timers and add up the total time.\n    let total = 0;\n    tmrs.forEach((timer) => {\n      total +=\n        (timer.minutesPerRound * 60 + timer.secondsPerRound) *\n          timer.roundsTotal +\n        (timer.minutesRest * 60 + timer.secondsRest) * timer.roundsTotal;\n    });\n    return total;\n  }\n\n  // Get the total time for all timers that aren't completed.\n  function getRemainingTime(tmrs) {\n    // Loop through the timers and add up the total time.\n    let total = 0;\n    tmrs.forEach((timer) => {\n      if (timer.status !== \"completed\") {\n        total +=\n          (timer.minutesPerRound * 60 + timer.secondsPerRound) *\n            timer.roundsTotal +\n          (timer.minutesRest * 60 + timer.secondsRest) * timer.roundsTotal;\n      }\n    });\n    return total;\n  }\n\n  // Move to the next timer.\n  function nextTimer() {\n    if (activeTimer === null) {\n      setStatus(\"reset\");\n    } else {\n      let updatedTimers = timers.map((timer, idx) => {\n        if (timer.timerId === activeTimer) {\n          timer.status = \"completed\";\n          if (timers[idx + 1]) {\n            setActiveTimer(timers[idx + 1].timerId);\n          } else {\n            setStatus(\"reset\");\n          }\n        }\n        return timer;\n      });\n      setTimers(updatedTimers);\n    }\n  }\n\n  // remove a timer by id.\n  function removeTimer(timerId) {\n    setTimers(timers.filter((t) => t.timerId !== timerId));\n    // Update the total time.\n    setSecondsTotal(getTotalTimerTime(timers));\n  }\n\n  return (\n    <TimerQueueContext.Provider value={timerQ}>\n      {children}\n    </TimerQueueContext.Provider>\n  );\n};\nexport default TimerQueueContextWrap;\n","// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n// get the remainder seconds after counting out the whole minutes.\nexport function secsPartFromSecs(seconds) {\n  return seconds % 60;\n}\n\n// Format the time display.\nexport function formatSeconds(time) {\n  time = time < 10 ? `0${time}` : time;\n  return time;\n}\n\n// get seconds difference between two dates.\nexport function getMsDiff(startDate, endDate) {\n  return endDate.getTime() - startDate.getTime();\n}\n\n// get the total number of seconds from minutes and seconds.\nexport function secsFromMinsSecs(minutes, seconds) {\n  return minutes * 60 + seconds;\n}\n\nexport function minsFromSecs(seconds) {\n  return Math.trunc(seconds / 60);\n}\n\n// get the total number of minutes from seconds.\nexport function minsPartFromMs(ms) {\n  return Math.trunc(ms / 1000 / 60);\n}\n\n// get the total number of seconds from seconds.\nexport function secsPartFromMs(ms) {\n  return Math.trunc(ms / 1000 % 60);\n}\n\n// Get the minutes part from seconds.\nexport function minsPartFromSecs(secs) {\n  return Math.trunc(secs / 60);\n}\n\n// Get milliseconds from minutes and seconds.\nexport function msFromMinsSecs(minutes, seconds) {\n  return (minutes * 60 + seconds) * 1000;\n}\n\n// Get minutes and seconds from milliseconds.\nexport function minsSecsFromMs(ms) {\n  return [ minsPartFromMs(ms), secsPartFromMs(ms) ];\n}\n// Get minutes and seconds from milliseconds.\nexport function minsSecsFromSecs(secs) {\n  secs = secs * 1000;\n  return [ minsPartFromMs(secs), secsPartFromMs(secs) ];\n}\n","\n/**\n * This component is used to display the timer stamp\n */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport * as h from \"../../utils/helpers\";\n\n\nconst TimerTotal = styled.div`\n    border: 1px solid gray;\n    font-size: medium;\n    margin: 0rem 1rem;\n    display: inline-flex;\n    &::before {\n        display: inline;\n        content: \"⌛\";\n        margin-right: 0.5rem;\n    }\n`;\n\nconst Text = styled.p`\n    font-size: large;\n    color: gray;\n    margin: 0;\n    padding: 0;\n`;\n\n//className=\"timer-display-time\"\nconst TimerTotalDisplay = (props) => {\n    const [ mins, secs ] = h.minsSecsFromSecs(props.seconds)\n    return (\n      <TimerTotal >\n          <Text>{props.title}</Text>\n          <Text>\n            {mins} mins{\" \"}\n            {secs} secs\n          </Text>\n        </TimerTotal>\n    );\n}\n\nexport default TimerTotalDisplay;","import React, { useContext } from \"react\";\nimport styled,{css} from \"styled-components\";\nimport * as ws from \"../../WorkoutStyles\";\n\n// Contexts.\nimport { TimerQueueContext } from \"../../TimerQueueContext.js\";\n\n// Styled components.\nimport Button from \"./Button.js\";\n\nconst StyledTimers = styled(ws.Container)`\n  flex-direction: column;\n  ${(props) =>\n    props.status === \"completed\" &&\n    css`\n      color: grey;\n      text-decoration: line-through;\n    `}\n`;\n\nconst TimersPanel = ({ timers, ...props }) => {\n  const { removeTimer } = useContext(TimerQueueContext);\n\n  // const completedTimers = timers.filter((timer) => timer.status === \"completed\");\n  // const notCompletedTimers = timers.filter(\n  //   (timer) => timer.status !== \"completed\"\n  // );  \n\n  // Keep the current mode in sync with the parent component that passed it in.\n  return (\n    \n    <StyledTimers {...props}>\n      {timers.map((timer, idx) => (\n        <ws.Container status={timer.status} key={`button-${idx}`} {...props}>\n          <Button\n            type=\"remove\"\n            label=\"\"\n            title=\"Remove Timer\"\n            img=\"❌\"\n            hover=\"lightcoral\"\n            onClick={() => removeTimer(timer.timerId)}\n          />\n          <timer.C key={`timer-${idx}`} {...timer} />\n        </ws.Container>\n      ))}\n    </StyledTimers>\n  );\n};\nexport default TimersPanel;\n","import React, { useContext} from \"react\";\nimport styled from \"styled-components\";\n\nimport * as ws from \"../WorkoutStyles\";\nimport Button from \"../components/generic/Button\";\nimport { TimerQueueContext } from \"../TimerQueueContext\";\nimport TimerTotalDisplay from \"../components/generic/TimerTotalDisplay.js\";\nimport TimersPanel from \"../components/generic/TimersPanel.js\";\n\nconst Timers = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  color: white;\n`;\n\n\nconst WorkoutView = (children) => {\n  const { timers, secondsLeft, setStatus, nextTimer, isRunning} =\n    useContext(TimerQueueContext);\n\n  const handleReset = () => {\n    setStatus(\"reset\");\n  };\n\n  const handleFastForward = () => {\n    nextTimer();\n  };\n\n  // Start/Stop.\n  function handleStartStop() {\n    setStatus(isRunning ? \"stopped\" : \"running\");\n  }\n\n  const buttonTypes = [\n    {\n      type: isRunning ? \"stop\" : \"start\",\n      label: isRunning ? \"⏹ STOP\" : \"▶ START\",\n      color: isRunning ? \"darkred\" : \"darkgreen\",\n      hover: isRunning ? \"red\" : \"green\",\n      onClick: handleStartStop,\n    },\n    {\n      type: \"fast-forward\",\n      onClick: handleFastForward,\n      label: \"⏭ NEXT\",\n      color: \"darkgoldenrod\",\n      hover: \"gold\",\n    },\n    { type: \"reset\", onClick: handleReset, label: \"♻ RESET\", hover: \"gray\" },\n  ];\n  return (\n    <Timers>\n      <ws.Container className=\"timer-inputs\">\n        {buttonTypes.map((btn, idx) => (\n          <Button key={`btn-${idx}`} {...btn} />\n        ))}\n      </ws.Container>\n      <TimerTotalDisplay title=\"Time Left: \" seconds={secondsLeft} />\n      <TimersPanel timers={timers} />\n    </Timers>\n  );\n};\n\nexport default WorkoutView;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as ws from \"../../WorkoutStyles\";\n\nconst TimerInputs = styled(ws.Container)`\n  display:flex;\n  flex-direction: column-reverse;\n  cursor: pointer;\n`;\nconst TimerInput = ({ label, value, propSetter, disabled, ...props }) => {\n  const type = props.type || \"number\";\n  const safeLabel = label.replace(/[^a-zA-Z]+/g, \"\").toLowerCase();\n  const id = \"timer-input-\" + safeLabel;\n\n  function handleChange(e) {\n    propSetter(parseInt(e.target.value));\n  }\n  return (\n    <TimerInputs disabled={disabled}>\n      <ws.TimerInputBox\n        {...props}\n        disabled={disabled}\n        type={type}\n        className=\"timer-input\"\n        name={id}\n        id={id}\n        value={value || \"\"}\n        onChange={handleChange}\n      />\n      <ws.TimerLabel disabled={disabled} htmlFor={id}>\n        {label}\n      </ws.TimerLabel>\n    </TimerInputs>\n  );\n};\n\nexport default TimerInput;\n","import React from \"react\";\nimport * as ws from \"../../WorkoutStyles\";\nimport styled, { css } from \"styled-components\";\n\nconst TimerType = styled(ws.Button)`\n  &.selected {\n    background-color: white;\n  }\n  &:hover {\n    border: 2px solid white;\n  }\n  ${(props) =>\n    props.selected &&\n    css`\n      background-color: white;\n      color: black;\n    `}\n  &:hover {\n    background-color: white;\n    color: black;\n  }\n`;\nconst TimerOptionsSelect = ({\n  label,\n  options,\n  selected,\n  propSetter,\n  disabled,\n  ...props\n}) => {\n  function handleChange(e) {\n    propSetter(e.target.textContent);\n  }\n\n  const safeLabel = label.replace(/[^a-zA-Z]+/g, \"\").toLowerCase();\n\n  // className=\"timer-input timer-select-option\"\n  return (\n    <ws.TimerInputGroup>\n      {options.map((optionValue, idx) => (\n        <TimerType\n          key={`option-${idx}`}\n          hover=\"white\"\n          onClick={handleChange}\n          id={`${safeLabel}-${optionValue}`}\n          {...(optionValue === selected && { selected: \"\" })}\n        >\n          {optionValue}\n        </TimerType>\n      ))}\n    </ws.TimerInputGroup>\n  );\n};\n\nexport default TimerOptionsSelect;\n","import { useState, useRef, useEffect, useContext } from \"react\";\nimport { TimerQueueContext } from \"../../TimerQueueContext.js\";\nimport * as h from \"../../utils/helpers.js\";\n\n// Custom hook to manage the state of timer components.\nexport const useTimer = (timerId) => {\n  const { timers, setSecondsLeft,status, getRemainingTime,activeTimer, isRunning, nextTimer } =\n    useContext(TimerQueueContext);\n\n    // Get the timer object that matches the timerId.\n  const timer = timers.filter((t) => t.timerId === timerId)[0];\n\n  // Props that should cause component rerender.\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [roundsTotal] = useState(timer?.roundsTotal || 1);\n  const [minutesPerRound] = useState(timer?.minutesPerRound || 0);\n  const [secondsPerRound] = useState(timer?.secondsPerRound || 0);\n  const [minutesRest] = useState(timer?.minutesRest || 0);\n  const [secondsRest] = useState(timer?.secondsRest || 0);\n  const [secsLeft, setSecsLeft] = useState(\n    h.secsFromMinsSecs(minutesPerRound, secondsPerRound) || 0\n  );\n\n  /**\n   * Props that shouldn't cause rerender.\n   */\n  // Internal, high resolution, state of the timer.\n  const msLeft = useRef(secsLeft * 1000 || 0);\n\n  // The Intervals that progress the timer.\n  const roundIntervalRef = useRef(null);\n\n  // Logic for rounds.\n  useEffect(() => {\n    function resetTimer() {\n      setSecsLeft(\n        h.secsFromMinsSecs(minutesPerRound, secondsPerRound) || 0\n      );\n      setRoundNumber(1);\n    }\n    if(status === \"reset\") {\n      resetTimer();\n    }\n\n    const timerFrequency = 250;\n    const timerUpdateFactor = 4;\n    // Set the above such that this comes out to 1 second.\n    const msUpdateFrequency = timerFrequency * timerUpdateFactor;\n\n    // If the timer isn't running\n    if (!isRunning || activeTimer !== timerId) {\n      // cleanup the Interval\n      roundIntervalRef.current && clearInterval(roundIntervalRef.current);\n      return;\n    } else {\n      if (timer.status === \"ready\") {\n        timer.status = \"running\";\n      }\n      // setup new Interval.\n      roundIntervalRef.current = setInterval(() => {\n        if (!roundNumber) {\n          setRoundNumber(1);\n        }\n        if (!msLeft.current) {\n          // get the total number of ms for the round.\n          msLeft.current = h.msFromMinsSecs(minutesPerRound, secondsPerRound);\n        }\n        msLeft.current -= timerFrequency;\n        // Update the displayed time left.\n        console.info(msLeft.current);\n        if (msLeft.current >= timerFrequency) {\n          // Only cause a rerender on the update frequency, and on the last \"tick\".\n          if (msLeft.current % msUpdateFrequency === 0) {\n            setSecsLeft(msLeft.current / 1000);\n          }\n        } else {\n          // Are there still rounds left?\n          if (roundNumber < roundsTotal) {\n            // Is there a rest period?\n            if ((minutesRest || secondsRest) && \"resting\" !== timer.status) {\n              // Initiate the rest period.\n              setSecsLeft(h.secsFromMinsSecs(minutesRest, secondsRest));\n              msLeft.current = h.msFromMinsSecs(minutesRest, secondsRest);\n              timer.status = \"resting\";\n            } else {\n              // Go to the next round.\n              setRoundNumber((prev) => prev + 1);\n              msLeft.current = h.msFromMinsSecs(\n                minutesPerRound,\n                secondsPerRound\n              );\n              timer.status = \"running\";\n              timer.status = \"running\";\n            }\n          } else {\n            // No more rounds left.\n            timer.status = \"complete\";\n            nextTimer();\n            setSecondsLeft(getRemainingTime(timers));\n            resetTimer();\n          }\n        }\n      }, timerFrequency);\n    }\n    return () => {\n      // cleanup the Interval.\n      if (roundIntervalRef.current) {\n        clearInterval(roundIntervalRef.current);\n      }\n    };\n  }, [\n    setSecondsLeft,\n    timer,\n    timers,\n    isRunning,\n    roundNumber,\n    minutesPerRound,\n    secondsPerRound,\n    minutesRest,\n    secondsRest,\n    roundsTotal,\n    timerId,\n    nextTimer,\n    status,\n    activeTimer,\n    getRemainingTime\n  ]);\n\n  return {\n    status: timer.status,\n    secsLeft: secsLeft,\n    isrunning: isRunning,\n    roundNumber: roundNumber,\n  };\n};\n","import React from \"react\";\nimport styled,{css} from \"styled-components\";\nimport * as ws from \"../../WorkoutStyles\";\n\n\nconst TimerDisplayWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  font-weight: bold;\n  justify-content: flex-start;\n  align-items: center;\n  padding-left: 0.2rem;\n  span {\n    font-size: 1rem;\n  padding: 0rem 0.2rem;\n  }\n    ${(props) => props.status === \"completed\" && \n    css`\n     & p, & span {\n      color:grey;\n      text-decoration: line-through;\n    `}\n`;\n\nconst TimerDisplayTime = styled(ws.Container)`\n    font-size: 1.5rem;\n    color: gray;\n    ${(props) => props.status === \"running\" && \n    css`\n      color:lime;\n    font-size: xx-large;\n    `}\n    ${(props) => props.status === \"completed\" && \n    css`\n      color:grey;\n      text-decoration: line-through;\n    `}\n    ${(props) => props.status === \"resting\" && \n    css`\n      color:yellow;\n    font-size: xx-large;\n    `}\n`;\n\nconst TimerDisplay = (props) => {\n  const roundTimers = [\"xy\", \"tabata\"];\n  const isRoundTimer = roundTimers.includes(props.type);\n  return (\n      <TimerDisplayWrap>\n      <TimerDisplayTime status={props.status}>\n        {props.mins}:{props.secs}\n      </TimerDisplayTime>\n      <p>{props.type}</p>\n        {\" \"}\n        <span>\n          {isRoundTimer &&\n            (props.status === \"resting\"\n              ? \"Rest\"\n              : `Round #${props.round} of ${props.roundsTotal}`)}\n        </span>\n    </TimerDisplayWrap>\n  );\n};\n\nexport default TimerDisplay;\n","import React, {  useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport TimerDisplay from \"../generic/TimerDisplay\";\nimport * as h from \"../../utils/helpers.js\";\n\nconst timerType = \"stopwatch\";\n\nconst Stopwatch = (props) => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const { secsLeft, status } = useTimer(props.timerId);\n\n  useEffect(() => {\n    const mins = h.minsPartFromSecs(getPassedSeconds());\n    const secs = h.secsPartFromSecs(getPassedSeconds());\n    setSecondsShown(h.formatSeconds(secs));\n    setMinutesShown(h.formatSeconds(mins));\n\n    // Calculate elapsed seconds.\n    function getPassedSeconds() {\n      const totalSecsPerRound = h.secsFromMinsSecs(\n        props.minutesPerRound,\n        props.secondsPerRound\n      );\n      return totalSecsPerRound - secsLeft;\n    }\n  }, [props, secsLeft]);\n\n\n  return (\n    <TimerDisplay\n      status={status}\n      id={props.timerId}\n      type={timerType}\n      mins={minutesShown}\n      secs={secondsShown}\n    />\n  );\n};\n\nexport default Stopwatch;\n","import React, { useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport TimerDisplay from \"../generic/TimerDisplay.js\";\nimport * as h from \"../../utils/helpers.js\";\n\n\nconst CountDown = (props) => {\n\n  \n\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const { secsLeft, status } = useTimer(props.timerId);\n\n  useEffect(() => {\n    let secsPart = h.secsPartFromSecs(secsLeft);\n    let minsPart = h.minsPartFromSecs(secsLeft);\n    // Update displyed time left for round.\n    setSecondsShown(h.formatSeconds(secsPart));\n    setMinutesShown(h.formatSeconds(minsPart));\n  }, [secsLeft]);\n\n  return (\n    <TimerDisplay\n      status={status}\n      id={props.timerId}\n      type={props.type}\n      mins={minutesShown}\n      secs={secondsShown}\n    />\n  );\n};\n\nexport default CountDown;\n","import React, { useEffect, useState } from \"react\";\nimport * as h from \"../../utils/helpers.js\";\nimport { useTimer } from \"./UseTimer\";\n\nimport TimerDisplay from \"../generic/TimerDisplay\";\n\nconst timerType = \"xy\";\n\nconst XY = (props) => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const {\n    status,\n    secsLeft,\n    roundNumber,\n  } = useTimer(props.timerId);\n\n  useEffect(() => {\n    let secsPart = h.secsPartFromSecs(secsLeft);\n    let minsPart = h.minsPartFromSecs(secsLeft);\n    // Update displyed time left for round.\n    setSecondsShown(h.formatSeconds(secsPart));\n    setMinutesShown(h.formatSeconds(minsPart));\n  }, [secsLeft]);\n\n\n  return (\n      <TimerDisplay\n        id={props.timerId}\n        type={timerType}\n        status={status}\n        mins={minutesShown}\n        secs={secondsShown}\n        round={roundNumber}\n        roundsTotal={props.roundsTotal}\n      />\n  );\n};\n\nexport default XY;\n","import React, { useEffect, useState } from \"react\";\nimport { useTimer } from \"./UseTimer\";\nimport TimerDisplay from \"../generic/TimerDisplay\";\nimport * as h from \"../../utils/helpers.js\";\nimport \"../../Timer.css\";\n\nconst timerType = \"tabata\";\n\nconst Tabata = (props) => {\n  // The displayed amount of time left in minutes & seconds.\n  const [minutesShown, setMinutesShown] = useState(\"00\");\n  const [secondsShown, setSecondsShown] = useState(\"00\");\n\n  const {\n    status,\n    secsLeft,\n    roundNumber,\n  } = useTimer(props.timerId);\n\n  useEffect(() => {\n    let secsPart = h.secsPartFromSecs(secsLeft);\n    let minsPart = h.minsPartFromSecs(secsLeft);\n    // Update displyed time left for round.\n    setSecondsShown(h.formatSeconds(secsPart));\n    setMinutesShown(h.formatSeconds(minsPart));\n  }, [secsLeft]);\n\n  \n  return (\n      <TimerDisplay\n        id={props.timerId}\n        type={timerType}\n        status={status}\n        mins={minutesShown}\n        secs={secondsShown}\n        round={roundNumber}\n        roundsTotal={props.roundsTotal}\n      />\n  );\n};\n\nexport default Tabata;\n","import React, {  useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as ws from \"../WorkoutStyles.js\";\n\n// Contexts.\nimport { TimerQueueContext } from \"../TimerQueueContext.js\";\n\n// Styled components.\nimport TimerTotalDisplay from \"../components/generic/TimerTotalDisplay.js\";\nimport TimerInput from \"../components/generic/TimerInput.js\";\nimport TimerTypeSelect from \"../components/generic/TimerTypeSelect.js\";\nimport Button from \"../components/generic/Button.js\";\nimport TimersPanel from \"../components/generic/TimersPanel.js\";\n\n// Components for the different types of timers.\nimport Stopwatch from \"../components/timers/Stopwatch.js\";\nimport Countdown from \"../components/timers/Countdown.js\";\nimport XY from \"../components/timers/XY.js\";\nimport Tabata from \"../components/timers/Tabata.js\";\n\nconst WorkoutEditWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst timerComponents = {\n  Stopwatch: Stopwatch,\n  Countdown: Countdown,\n  XY: XY,\n  Tabata: Tabata,\n};\n\nconst WorkoutEdit = () => {\n  const { timers, secondsTotal, addTimer} =\n    useContext(TimerQueueContext);\n  // Start with empty to display only the times.\n  const [timerType, setTimerType] = useState(\"\");\n\n  // Track what's currently entered in the timer inputs.\n  const [minutesPerRound, setMinutesPerRound] = useState(0);\n  const [secondsPerRound, setSecondsPerRound] = useState(0);\n  const [minutesRest, setMinutesRest] = useState(0);\n  const [secondsRest, setSecondsRest] = useState(0);\n  const [roundsTotal, setRoundsTotal] = useState(1);\n\n  // If this is less than 0, then show/hide some inputs.\n  const timeInputCheck =\n    secondsPerRound + minutesPerRound + secondsRest + minutesRest;\n\n  function AddTimer() {\n    // add a new timer to the queue using the current values.\n    const restTimers = [\"tabata\"];\n    if (timerType) {\n      const type = timerType.toLowerCase();\n      addTimer(\n        {\n        timerId: Date.now(),\n        C: timerComponents[timerType],\n        type: type,\n        status: \"ready\",\n        minutesPerRound: minutesPerRound,\n        secondsPerRound: secondsPerRound,\n        minutesRest: restTimers.includes(type) ? minutesRest : 0,\n        secondsRest: restTimers.includes(type) ? secondsRest : 0,\n        roundsTotal: roundsTotal || 1,\n      }\n      );\n    } else {\n      console.error(`Invalid timerType: ${timerType}`);\n    }\n  }\n  const timerTypeOptions = [\n    {\n      label: \"Timer Type\",\n      value: timerType,\n      options: [\"Stopwatch\", \"Countdown\", \"XY\", \"Tabata\"],\n      propSetter: setTimerType,\n      type: \"select\",\n    },\n  ];\n  const timerInputs = [\n    {\n      label: \"Mins\",\n      value: minutesPerRound,\n      // options: [0, 1, 2, 3, 4, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\n      propSetter: setMinutesPerRound,\n      onClick: () => {\n        setMinutesPerRound((mins) => {\n          return (mins += 1);\n        });\n      },\n      type: \"number\",\n      min: \"0\",\n    },\n    {\n      label: \"Secs\",\n      value: secondsPerRound,\n      // options: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\n      propSetter: setSecondsPerRound,\n      min: \"0\",\n      max: \"59\",\n      onClick: () => {\n        setSecondsPerRound((secs) => {\n          return (secs += 5);\n        });\n      },\n      type: \"number\",\n    },\n    {\n      label: \"Rest(Mins)\",\n      value: minutesRest,\n      // options: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\n      propSetter: setMinutesRest,\n      disabled: timerType !== \"Tabata\",\n      min: \"0\",\n      type: \"number\",\n      onClick: () => {\n        setMinutesRest((mins) => {\n          return (mins += 1);\n        });\n      },\n    },\n    {\n      label: \"Rest(Secs)\",\n      value: secondsRest,\n      // options: [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60],\n      propSetter: setSecondsRest,\n      disabled: timerType !== \"Tabata\",\n      min: \"0\",\n      max: \"59\",\n      type: \"number\",\n      onClick: () => {\n        setSecondsRest((secs) => {\n          return (secs += 5);\n        });\n      },\n    },\n    {\n      label: \"Rounds\",\n      value: roundsTotal,\n      propSetter: setRoundsTotal,\n      disabled: [\"Stopwatch\", \"Countdown\"].includes(timerType),\n      type: \"number\",\n      min: \"1\",\n      onClick: () => {\n        setRoundsTotal((rounds) => {\n          return (rounds += 1);\n        });\n      },\n    },\n  ];\n  return (\n    <WorkoutEditWrap>\n      <ws.Container style={{ flexDirection: \"column\" }}>\n        {timerType === \"\" && <strong>Choose A Timer</strong>}\n        {timerTypeOptions.map((option, idx) => (\n          <TimerTypeSelect\n            key={`option-${idx}`}\n            label={option.label}\n            value={option.value}\n            hover=\"silver\"\n            selected={timerType === option.value}\n            propSetter={option.propSetter}\n            disabled={option.disabled}\n            options={option.options}\n            {...option}\n          />\n        ))}\n      </ws.Container>\n      <ws.Container>\n        {timerType &&\n          timerInputs.map((timer, idx) => (\n            <TimerInput\n              key={`option-${idx}`}\n              label={timer.label}\n              hover=\"silver\"\n              value={timer.value}\n              propSetter={timer.propSetter}\n              disabled={timer.disabled}\n              {...timer}\n            />\n          ))}\n      </ws.Container>\n      {timerType && timeInputCheck > 0 && (\n        <ws.Container>\n          <Button\n            type=\"add\"\n            id=\"add-timer\"\n            label=\"\"\n            title=\"Add Timer\"\n            hover=\"lightgreen\"\n            color=\"green\"\n            disabled={timeInputCheck < 0}\n            img={timerType ? `＋` : \"\"}\n            onClick={AddTimer}\n          ></Button>\n          <span style={{ fontSize: \"1rem\" }}>Add {timerType}</span>\n          <TimerTotalDisplay\n            title=\"Total Workout Time: \"\n            seconds={secondsTotal}\n          />\n        </ws.Container>\n      )}\n      <TimersPanel timers={timers}  />\n    </WorkoutEditWrap>\n  );\n};\nexport default WorkoutEdit;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport DocumentationView from \"./views/DocumentationView\";\nimport WorkoutView from \"./views/WorkoutView\";\nimport WorkoutEdit from \"./views/WorkoutEdit\";\nimport TimerQueueContextWrap from \"./TimerQueueContext\";\n\nconst Container = styled.div`\n  background: black;\n  height: 100vh;\n  overflow: auto;\n  text: white;\n  li {\n    list-style-type: none;\n    justify-content: flex-start;\n    padding: 0.5rem;\n  }\n  ul{\n    display: flex;\n    padding: 0;\n  }\n  color: white;\n`;\n\nconst Nav = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/edit\">Edit</Link>\n        </li>\n        <li>\n          <Link to=\"/\">Workout</Link>\n        </li>\n        <li>\n          <Link to=\"/docs\">Documentation</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\nconst App = () => {\n  return (\n    <Container>\n      <Router>\n        <Nav />\n        <TimerQueueContextWrap>\n          <Routes>\n            <Route path=\"/docs\" element={<DocumentationView />} />\n            <Route path=\"/\" element={<WorkoutView />} />\n            <Route path=\"/add\" element={<WorkoutEdit />} />\n            <Route path=\"*\" element={<WorkoutEdit />} />\n          </Routes>\n        </TimerQueueContextWrap>\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}